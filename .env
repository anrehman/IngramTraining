
# Spark access token of the bot
SPARK_TOKEN=bot token

# Name used to mention your bot in a 'Group' space
# used by the help command and the bot.enrichCommand utility
BOT_NICKNAME=MKWeather

# Secret used to generate an HMAC-SHA1 for each payload submitted to your bot
# Optional but highly recommended to use a Secret when going to production
SECRET=randomsecret

# Internet facing URL where your bot can be reached
# note that botkit automatically appends the relative path "/ciscospark/receive"
PUBLIC_URL=https://ngrok

BOT_EMAIL=mkweatherbot@webex.bot

# Name used to create the webhook to register your bot against Cisco Spark
# Defaults to 'built with BotKit (development)'
#
# WARNING: if you set or update this value,
#   - BotKit will automatically create a new Cisco Spark WebHook with the SPARK_TOKEN above
#   - BUT BotKit will not delete the previously created WebHook entry
#   - YOU will need to take this action manually
# HERE'S HOW
#   - manually list your bot webhooks via Postman or the Spark API documentation
#     /!\ make sure to use your bot's access token
#     https://developer.ciscospark.com/endpoint-webhooks-get.html
#   - identify the previously registered webhook identifier and delete it
#     https://developer.ciscospark.com/endpoint-webhooks-webhookId-delete.html
#WEBHOOK_NAME=built with BotKit (development)

# Local port where your bot will be started
PORT=5015

# Node Environment
# defaults to development
#NODE_ENV=production

#
# Bot meta info specified as Bot Commons specifications
#

# Bot legal owner
owner=Makenai Solutions Inovations and Creative Ideas

# Messaging platform
platform=Cisco Webex

# Contact
support=Aniqa Rehman <mailto:arehman@makenai.es>

# Source code
code=Private

#API URL
APIURL=https://api.openweathermap.org/data/2.5
CISCOAPIURL=https://api.ciscospark.com/v1

#APIdata
CITY=Madrid
APIKEY=3712a69a110d67a8b41dd85e6089c612